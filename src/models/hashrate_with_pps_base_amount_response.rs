/*
 * Foundry USA Pool API
 *
 * The Foundry USA Pool API allows users to view data and perform actions using custom written software. To get started, please follow the instructions in the Authentication Test endpoint.
 *
 * The version of the OpenAPI document: 6.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HashrateWithPpsBaseAmountResponse {
    #[serde(rename = "time")]
    pub time: String,
    #[serde(rename = "endTime", skip_serializing_if = "Option::is_none")]
    pub end_time: Option<String>,
    #[serde(rename = "unixTime")]
    pub unix_time: i64,
    #[serde(rename = "hashrateAccepted")]
    pub hashrate_accepted: i64,
    #[serde(rename = "hashrateStale")]
    pub hashrate_stale: i64,
    #[serde(rename = "hashrateRejected")]
    pub hashrate_rejected: i64,
    #[serde(rename = "pps")]
    pub pps: f64,
}

impl HashrateWithPpsBaseAmountResponse {
    pub fn new(
        time: String,
        unix_time: i64,
        hashrate_accepted: i64,
        hashrate_stale: i64,
        hashrate_rejected: i64,
        pps: f64,
    ) -> HashrateWithPpsBaseAmountResponse {
        HashrateWithPpsBaseAmountResponse {
            time,
            end_time: None,
            unix_time,
            hashrate_accepted,
            hashrate_stale,
            hashrate_rejected,
            pps,
        }
    }
}
