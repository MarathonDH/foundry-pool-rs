/*
 * Foundry USA Pool API
 *
 * The Foundry USA Pool API allows users to view data and perform actions using custom written software. To get started, please follow the instructions in the Authentication Test endpoint.
 *
 * The version of the OpenAPI document: 6.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionResponse {
    #[serde(rename = "time")]
    pub time: String,
    #[serde(rename = "broadcastTime", skip_serializing_if = "Option::is_none")]
    pub broadcast_time: Option<String>,
    #[serde(rename = "amount")]
    pub amount: f64,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "txId", skip_serializing_if = "Option::is_none")]
    pub tx_id: Option<String>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
}

impl TransactionResponse {
    pub fn new(
        time: String,
        amount: f64,
        r#type: String,
        description: String,
    ) -> TransactionResponse {
        TransactionResponse {
            time,
            broadcast_time: None,
            amount,
            r#type,
            description,
            tx_id: None,
            address: None,
        }
    }
}
