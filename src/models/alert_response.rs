/*
 * Foundry USA Pool API
 *
 * The Foundry USA Pool API allows users to view data and perform actions using custom written software. To get started, please follow the instructions in the Authentication Test endpoint.
 *
 * The version of the OpenAPI document: 6.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlertResponse {
    #[serde(rename = "alertId")]
    pub alert_id: i32,
    #[serde(rename = "hashrateThreshold")]
    pub hashrate_threshold: i64,
    #[serde(rename = "activeWorkersThreshold")]
    pub active_workers_threshold: i32,
    #[serde(rename = "emailList")]
    pub email_list: Vec<String>,
    #[serde(rename = "groupName")]
    pub group_name: String,
    #[serde(rename = "subAccountName")]
    pub sub_account_name: String,
    #[serde(rename = "isTriggered", skip_serializing_if = "Option::is_none")]
    pub is_triggered: Option<bool>,
    #[serde(rename = "alertInfo", skip_serializing_if = "Option::is_none")]
    pub alert_info: Option<Box<models::AlertInfo>>,
    #[serde(rename = "triggered", skip_serializing_if = "Option::is_none")]
    pub triggered: Option<bool>,
}

impl AlertResponse {
    pub fn new(
        alert_id: i32,
        hashrate_threshold: i64,
        active_workers_threshold: i32,
        email_list: Vec<String>,
        group_name: String,
        sub_account_name: String,
    ) -> AlertResponse {
        AlertResponse {
            alert_id,
            hashrate_threshold,
            active_workers_threshold,
            email_list,
            group_name,
            sub_account_name,
            is_triggered: None,
            alert_info: None,
            triggered: None,
        }
    }
}
